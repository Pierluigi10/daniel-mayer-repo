---
import { getLangFromUrl, useTranslations, languages } from "../utils/i18n";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const currentPath = Astro.url.pathname;
---

<header class="bg-white shadow-sm sticky top-0 z-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a
          href={lang === "de" ? "/" : `/${lang}`}
          aria-label={lang === "de"
            ? "Zur Startseite"
            : lang === "it"
              ? "Vai alla pagina iniziale"
              : "Go to homepage"}
          class="text-2xl font-bold text-primary"
        >
          Meyer Tax
        </a>
      </div>

      <!-- Navigation -->
      <nav class="hidden md:block" aria-label="Hauptnavigation">
        <ul class="ml-10 flex items-baseline space-x-8">
          <li>
            <a
              href={lang === "de" ? "/" : `/${lang}`}
              aria-label={lang === "de"
                ? "Gehe zur Startseite"
                : lang === "it"
                  ? "Vai alla pagina iniziale"
                  : "Go to homepage"}
              class="text-primary hover:text-primary-light px-2 py-2 text-sm font-medium transition-colors"
            >
              {t("nav.home")}
            </a>
          </li>
          <li>
            <a
              href={lang === "de" ? "/#services" : `/${lang}/#services`}
              aria-label={lang === "de"
                ? "Zu unseren Leistungen"
                : lang === "it"
                  ? "Vai ai nostri servizi"
                  : "Go to our services"}
              class="text-primary hover:text-primary-light px-2 py-2 text-sm font-medium transition-colors"
            >
              {t("nav.services")}
            </a>
          </li>
          <li>
            <a
              href={lang === "de" ? "/#about" : `/${lang}/#about`}
              aria-label={lang === "de"
                ? "Mehr über uns erfahren"
                : lang === "it"
                  ? "Scopri di più su di noi"
                  : "Learn more about us"}
              class="text-primary hover:text-primary-light px-2 py-2 text-sm font-medium transition-colors"
            >
              {t("nav.about")}
            </a>
          </li>
          <li>
            <a
              href={lang === "de" ? "/#contact" : `/${lang}/#contact`}
              aria-label={lang === "de"
                ? "Kontaktieren Sie uns"
                : lang === "it"
                  ? "Contattaci"
                  : "Contact us"}
              class="text-primary hover:text-primary-light px-2 py-2 text-sm font-medium transition-colors"
            >
              {t("nav.contact")}
            </a>
          </li>
        </ul>
      </nav>

      <!-- Language Switcher -->
      <div class="relative">
        <label for="language-select" class="sr-only">Language</label>
        <select
          id="language-select"
          class="bg-neutral-10 text-neutral-90 border-2 border-neutral-70 cursor-pointer rounded-md px-3 py-1 text-sm shadow-sm focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary"
        >
          {
            Object.entries(languages).map(([code, name]) => (
              <option value={code} selected={code === lang}>
                {name}
              </option>
            ))
          }
        </select>
      </div>

      <!-- Mobile menu button (accessible) -->
      <div class="md:hidden">
        <button
          id="mobile-menu-button"
          aria-label={lang === "de"
            ? "Navigation umschalten"
            : lang === "it"
              ? "Apri o chiudi il menu di navigazione"
              : "Toggle navigation menu"}
          aria-controls="mobile-menu"
          aria-expanded="false"
          class="text-gray-700 hover:text-primary cursor-pointer p-2 rounded focus:outline-none focus:ring-2 focus:ring-primary"
        >
          <span class="sr-only"
            >{
              lang === "de"
                ? "Hauptmenü öffnen"
                : lang === "it"
                  ? "Apri il menu principale"
                  : "Open main menu"
            }</span
          >
          <!-- Hamburger icon -->
          <svg
            id="icon-hamburger"
            class="h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
          <!-- Close icon -->
          <svg
            id="icon-close"
            class="h-6 w-6 hidden"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <nav
      id="mobile-menu"
      class="md:hidden hidden"
      aria-label="Hauptnavigation (mobil)"
    >
      <ul class="px-2 pt-2 pb-3 sm:px-3 bg-white space-y-1">
        <li>
          <a
            href={lang === "de" ? "/" : `/${lang}`}
            aria-label={lang === "de"
              ? "Gehe zur Startseite"
              : lang === "it"
                ? "Vai alla pagina iniziale"
                : "Go to homepage"}
            class="block px-3 py-2 text-base font-medium text-primary hover:text-primary-light transition-colors rounded"
          >
            {t("nav.home")}
          </a>
        </li>
        <li>
          <a
            href={lang === "de" ? "/#services" : `/${lang}/#services`}
            aria-label={lang === "de"
              ? "Zu unseren Leistungen"
              : lang === "it"
                ? "Vai ai nostri servizi"
                : "Go to our services"}
            class="block px-3 py-2 text-base font-medium text-primary hover:text-primary-light transition-colors rounded"
          >
            {t("nav.services")}
          </a>
        </li>
        <li>
          <a
            href={lang === "de" ? "/#about" : `/${lang}/#about`}
            aria-label={lang === "de"
              ? "Mehr über uns erfahren"
              : lang === "it"
                ? "Scopri di più su di noi"
                : "Learn more about us"}
            class="block px-3 py-2 text-base font-medium text-primary hover:text-primary-light transition-colors rounded"
          >
            {t("nav.about")}
          </a>
        </li>
        <li>
          <a
            href={lang === "de" ? "/#contact" : `/${lang}/#contact`}
            aria-label={lang === "de"
              ? "Kontaktieren Sie uns"
              : lang === "it"
                ? "Contattaci"
                : "Contact us"}
            class="block px-3 py-2 text-base font-medium text-primary hover:text-primary-light transition-colors rounded"
          >
            {t("nav.contact")}
          </a>
        </li>
      </ul>
    </nav>
  </div>
</header>

<script>
  // Elements
  const mobileMenuButton = document.getElementById("mobile-menu-button");
  const mobileMenu = document.getElementById("mobile-menu");
  const iconHamburger = document.getElementById("icon-hamburger");
  const iconClose = document.getElementById("icon-close");

  function setMenuState(open: boolean | undefined) {
    if (!mobileMenuButton || !mobileMenu || !iconHamburger || !iconClose)
      return;
    mobileMenu.classList.toggle("hidden", !open);
    mobileMenuButton.setAttribute("aria-expanded", String(open));
    iconHamburger.classList.toggle("hidden", open);
    iconClose.classList.toggle("hidden", !open);
  }

  if (mobileMenuButton) {
    mobileMenuButton.addEventListener("click", () => {
      const isOpen = mobileMenu
        ? !mobileMenu.classList.contains("hidden")
        : false;
      setMenuState(!isOpen);
    });
  }

  if (mobileMenu) {
    mobileMenu.querySelectorAll("a").forEach((link) => {
      link.addEventListener("click", () => setMenuState(false));
    });
  }

  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape") setMenuState(false);
  });

  // Language switcher
  const languageSelect = document.getElementById("language-select");
  if (languageSelect) {
    languageSelect.addEventListener("change", (e) => {
      const target = e.target;
      if (target && target instanceof HTMLSelectElement) {
        const selectedLang = target.value;
        let newPath = "/";
        if (selectedLang !== "de") newPath = `/${selectedLang}`;
        window.location.href = newPath;
      }
    });
  }
</script>
